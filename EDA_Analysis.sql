--Explore All Columns in the Database 

select * from [gold.dim_customers]

select* from [gold.dim_products]

select * from [gold.fact_sales]


--Explore all the columns of the database 

select * from INFORMATION_SCHEMA.COLUMNS


-- Explore the Dimensions in the Data base 
-- customers country Comes From

select  distinct country from [gold.dim_customers]


--- Explore  all the categories in the products  

Select distinct  category from [gold.dim_products]


-- Explore all the categories "The major  Divisions"
 --  to find the distribution of the  products 
select Distinct category,subcategory,product_name from [gold.dim_products]


--To  find the First and the Last  Order Date
select 
min(order_date) as 'First_Order_Date',
Max(order_date) as 'Last_Order_Date'
from [gold.fact_sales]

-- How many years of the sales data are available  
select 
min(order_date) as 'First_Order_Date',
Max(order_date) as 'Last_Order_Date',
Datediff(year , min(order_date) ,max(order_date)) as Years_Of_Data -- 4 years of data 
from [gold.fact_sales]

-- How many Months of the sales data are available  
select 
min(order_date) as 'First_Order_Date',
Max(order_date) as 'Last_Order_Date',
Datediff(Month , min(order_date) ,max(order_date)) as Years_Of_Data -- 4 years of data 
from [gold.fact_sales]


-- Here find the youngest and the oldest birth customer  in the Database 

select 
(max(birthdate)) as 'Youngest_Age',
(min(birthdate)) as 'Oldest_Age'
from [gold.dim_customers]


-- Help  as to  identify the target Customer by Age 39 to 109
select 
DATEDIFF(YEAR ,max(birthdate),GETDATE()) as 'Youngest_Age',
DATEDIFF(YEAR ,min(birthdate),GETDATE()) as 'Oldest_Age'
from [gold.dim_customers]




-- Exploring the Measures (to find the keymetrics of the function)
select * from [gold.fact_sales]

-- Find the total sales

select sum(sales_amount)as 'Total_Sales' from [gold.fact_sales]


-- Find How many items are sold 

select sum(Quantity)as 'Total_item_Sold' from [gold.fact_sales]


-- Find the Average Selling Prize

select avg(price)as 'Avg_Selling_Prize' from [gold.fact_sales]


-- Find the total Number of Orders 

select  count(order_number) from [gold.fact_sales]
select  count(Distinct order_number) from [gold.fact_sales] -- to avoid duplicates


-- Find  the total Number of products 

select  count(product_key) from [gold.dim_products]
select  count(Distinct product_key) from [gold.dim_products] -- to avoid duplicates


-- Find the total Number of Customers

select Count(customer_key) from [gold.dim_customers]
select Count(Distinct customer_key) from [gold.dim_customers] -- to avoid duplicates



-- Find the total Number of  customers that  has placed  an orders 

select Count(Distinct customer_key) from [gold.dim_customers]


--  Generating a Report that  shows all  the  Keymetrics of the Business


select 'Total_Sales' as measure_name ,sum(sales_amount) as Measure_Values from [gold.fact_sales]
union all
select 'Total_item_Sold' ,sum(Quantity) from [gold.fact_sales]
union all
select 'Avg_Selling_Prize' ,avg(price) from [gold.fact_sales]
union all
select 'Total_No_Orders',  count(Distinct order_number)  from [gold.fact_sales]
union all
select 'Total_No_Products' ,  count(Distinct product_key)  from [gold.dim_products]
union all
select 'Total_No_Customers' , Count(Distinct customer_key)  from [gold.dim_customers] 


--  Magnitude  Analysis 
--  Compare the Dimensions with the Measure  values
select  * from [gold.fact_sales]

select * from [gold.dim_customers]

-- Total Customers by country  

-- United States contains Highest consumer in the DB 
-- Canada contains the lowest customer in the DB 

select Country, Count(customer_id) as 'No_of_Customer' from [gold.dim_customers]
Group by country
order by No_of_Customer desc

-- Total Customers by Gender
-- Male is the highestconsumer
-- Female is also more  overequal  to the male

select
gender,
Count(customer_id) as 'No_of_Customer' from  [gold.dim_customers]
Group by gender
order by No_of_Customer desc


-- Total product by Category
-- Most selling is Components

select category ,Count(product_key) as 'No_of_product' from [gold.dim_products]
Group by category 
order by No_of_product Desc

-- What is the average costs  in each Category ?
-- By average Bikes having Highest sales  

select category , avg(cost) as 'Avg_Cost' from [gold.dim_products] 
group by category
order by Avg_Cost Desc


-- what is the total revenue  generated by  each category ?
-- By category Bikes Having the Highest revenue  and  Clothing  has the lowest revenue 

select p.category , sum(s.sales_amount) as 'Total_Revenue' from [gold.fact_sales] S 
Left join 
[gold.dim_products] p on  s.product_key = p.product_key
group by category
order by Total_Revenue Desc


-- Find the Total revenue Generated by each customer 
-- Nichole Naqra  is  the highest revenue  producer by Data 

select C.first_name,C.last_name,C.customer_key ,sum(s.sales_amount) as 'Total_Revenue' 
from  [gold.fact_sales] S left join [gold.dim_customers] C on s.customer_key = C.customer_key
group by C.customer_key ,C.first_name,C.last_name
order by Total_Revenue Desc



-- What is  the  distribution of solid  items across countries ?
-- Highest revenue producing country is United States By revenue 

select C.country ,sum(s.sales_amount) as 'Total_Revenue' 
from  [gold.fact_sales] S left join [gold.dim_customers] C on s.customer_key = C.customer_key
group by C.country
order by Total_Revenue Desc

-- What are highest revenue  producing Product 
-- Top 5 productsare bikes 

select top 5  p.product_name , sum(s.sales_amount) as 'Total_Revenue' from [gold.fact_sales] S 
Left join 
[gold.dim_products] p on  s.product_key = p.product_key
group by p.product_name
order by Total_Revenue Desc

select  * from 
( 
select p.product_name , sum(s.sales_amount) as 'Total_Revenue',
ROW_NUMBER() Over  (Order by sum(s.sales_amount)Desc) as Rank_Product
from [gold.fact_sales] S 
Left join 
[gold.dim_products] p on  s.product_key = p.product_key
group by p.product_name
) t
where  Rank_Product < = 5 

-- What are the worst  performing  product  

select top 5  p.product_name , sum(s.sales_amount) as 'Total_Revenue' from [gold.fact_sales] S 
Left join 
[gold.dim_products] p on  s.product_key = p.product_key
group by p.product_name
order by Total_Revenue 


--Top 10 customers who  generate Highest revenue  

select  top  10 C.first_name,C.last_name,C.customer_key ,sum(s.sales_amount) as 'Total_Revenue' 
from  [gold.fact_sales] S left join [gold.dim_customers] C on s.customer_key = C.customer_key
group by C.customer_key ,C.first_name,C.last_name
order by Total_Revenue Desc